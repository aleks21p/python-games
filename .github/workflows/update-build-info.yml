name: Update build info

on:
  push:
    branches: [ main ]
    # ignore changes to the generated build-info file to avoid loops
    paths-ignore:
      - 'games-HTML5/zombie-shooter/build-info.js'
      - 'games-HTML5/version.json'

# Allow this workflow to push changes back to the repository
permissions:
  contents: write

jobs:
  write-build-info:
    # Use GitHub-hosted runner (ubuntu-latest). Hosted runners are provided by GitHub
    # and will run your job in the cloud. Note: minutes/usage depend on repo plan.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # ensure the runner has the commit refs and allow pushing
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get git metadata
        id: gitmeta
        run: |
          echo "SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "FULL=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "TIME=$(git log -1 --format=%cI)" >> $GITHUB_OUTPUT
          # Try to find the latest annotated or lightweight tag; prefer semver-like tags
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
          if [ -n "$TAG" ]; then
            echo "VERSION=$TAG" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi

      - name: Create build-info.js and update version.json
        run: |
          mkdir -p games-HTML5/zombie-shooter
          cat > games-HTML5/zombie-shooter/build-info.js <<'JS'
          // This file is generated by .github/workflows/update-build-info.yml
          // It sets window globals used by the game to display build metadata.
          window.BUILD_VERSION = '${{ steps.gitmeta.outputs.VERSION }}';
          window.BUILD_COMMIT = '${{ steps.gitmeta.outputs.FULL }}';
          window.BUILD_COMMIT_TIME = '${{ steps.gitmeta.outputs.TIME }}';
          JS
          
          # Update version.json for auto-refresh functionality
          cat > games-HTML5/version.json <<'VERSION'
          {
            "version": "${{ steps.gitmeta.outputs.VERSION }}",
            "timestamp": "${{ steps.gitmeta.outputs.TIME }}",
            "games": {
              "soundboard": "${{ steps.gitmeta.outputs.VERSION }}",
              "zombie-shooter": "${{ steps.gitmeta.outputs.VERSION }}"
            },
            "lastUpdated": "${{ steps.gitmeta.outputs.TIME }}"
          }
          VERSION

      - name: Commit and push build-info
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add games-HTML5/zombie-shooter/build-info.js games-HTML5/version.json
          git commit -m "chore: update build-info.js and version.json [skip ci]" || echo "no changes to commit"
          git push origin HEAD:main
